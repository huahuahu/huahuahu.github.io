<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-02-24T23:07:06+08:00</updated><id>http://localhost:4000/</id><title type="html">花花🐯的博客</title><subtitle>know the world, know myself
</subtitle><entry><title type="html">Welcome To Jekyll</title><link href="http://localhost:4000/2017/02/24/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome To Jekyll" /><published>2017-02-24T00:00:00+08:00</published><updated>2017-02-24T00:00:00+08:00</updated><id>http://localhost:4000/2017/02/24/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/2017/02/24/welcome-to-jekyll.html">&lt;h1 id=&quot;swift和objective-c关于字符串的一个小特性&quot;&gt;Swift和Objective C关于字符串的一个小特性&lt;/h1&gt;

&lt;h2 id=&quot;一unicode的一个小特性&quot;&gt;一、Unicode的一个小特性&lt;/h2&gt;

&lt;p&gt;首先，Unicode规定了许多code point，每一个code point表示一个字符。如\u0033表示字符“3”，\u864e表示字符“你”。
反过来，不是每一个字符都对应一个code point，每一个字符也不止有一个code point的表示方法。
比如说，“🐯”这个emoji表情对应的code point是“\ud83d\udc2f\u000d\u000a”，由4个code point组成，而不是一个。
“é”这个字符对应的code point有两个，“\u00e9”以及“\u0065\u0301”这两个code point序列（一个或多个code point）均可表示这个字符。
那么如何比较两个字符串是否相同呢？Unicode规定了&lt;a href=&quot;http://www.unicode.org/reports/tr15/&quot;&gt;正规化的方法&lt;/a&gt;，要把code point的序列正规化，然后判断是否一致。
下面我们看下Swift和NSString对这个规则的支持情况。&lt;/p&gt;

&lt;h2 id=&quot;二objective-c中的字符串&quot;&gt;二、Objective C中的字符串&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;An NSString object encodes a Unicode-compliant text string, represented as a sequence of UTF–16 code units&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;NSString支持Unicode，一个NSString其实是UTF-16编码以后的得到的code unit序列，而&lt;code class=&quot;highlighter-rouge&quot;&gt;length&lt;/code&gt;属性返回的是code unit序列的长度，而不是字符的长度。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The number of UTF-16 code units in the receiver.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    NSString *str1 = @&quot;🐯&quot;;
    NSLog(@&quot;str1: %@,length is %zd&quot;,str1,str1.length);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输出如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;str1: 🐯,length is 2 &amp;gt; The comparison uses the canonical representation of strings, which for a particular string is the length of the string plus the UTF-16 code units that make up the string. 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;比较字符串时，也只是比较code unit的序列，因此没有用到Unicode归一化的表达，可能会造成不同code point表示的同一个字符被认为是不同的字符。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    str1 = @&quot;\u00e9&quot;;
    NSString *str2 = @&quot;e\u0301&quot;;
    NSLog(@&quot;\n str1: %@, length %zd;\n str2: %@, length %zd;\n str1 equal to str2 %@&quot;,str1,str1.length, str2, str2.length, ([str2 isEqualToString:str1] ? @&quot;yes&quot; : @&quot;no&quot;));
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;输出如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;str1: é, length 1;
str2: é, length 2;
str1 equal to str2 no
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;三swift中的字符串&quot;&gt;三、Swift中的字符串&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;A string is a series of characters&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在Swift关于String的文档中，第一句话就是字符串是字符的序列，而不是code unit的序列。String有一个&lt;code class=&quot;highlighter-rouge&quot;&gt;characters&lt;/code&gt;的属性，是字符的集合。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    let str1 = &quot;cafe\u{301}&quot;
    let str2 = &quot;caf\u{e9}&quot;
    print(&quot;str1 is \(str1),length is &quot;,str1.characters.count,&quot;; str2 is \(str2), stre length is&quot;,str2.characters.count)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;结果如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;str1 is café,length is  4 ; str2 is café, stre length is 4 在比较字符串时，结果符合将code point正规化之后的结果。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;           print(&quot;str1 is equal to str2&quot;,str1 == str2)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;结果如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;str1 is equal to str2 true
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Swift和Objective C关于字符串的一个小特性</summary></entry></feed>